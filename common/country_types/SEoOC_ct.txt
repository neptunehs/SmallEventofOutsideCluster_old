nep_malfunctioning_guards = {
	is_space_critter = yes
	blocks_piracy = yes
	government = no
	destroys_starbases = yes
	needs_survey = no
	has_complete_sensor = yes
	ai = {
		enabled = no
	}
	faction = {
		hostile = yes
		needs_border_access = no
		generate_borders = no
		needs_colony = no
	}
	modules = {
		exclusive_diplomacy_module = {} # Nothing is allowed, but we need this for relationships.
		all_technology_module = {}
		standard_event_module = {} # For bouncing events
	}
}

nep_seal_evil_country = {
	is_space_critter = yes
	blocks_piracy = yes
	destroys_starbases = yes
	ai = {
		enabled = no
	}
	faction = {
		hostile = yes
		needs_border_access = no
		generate_borders = no
		needs_colony = no
	}
	modules = {
		exclusive_diplomacy_module = {} # Nothing is allowed, but we need this for relationships.
		basic_technology_module = {}
		standard_event_module = {} # For bouncing events
	}
}

nep_Legnahcras_country = {
	is_space_critter = yes
	blocks_piracy = yes
	destroys_starbases = yes
	ai = {
		enabled = no
	}
	faction = {
		hostile = yes
		needs_border_access = no
		generate_borders = no
		needs_colony = no
	}
	modules = {
		exclusive_diplomacy_module = {} # Nothing is allowed, but we need this for relationships.
		basic_technology_module = {}
		standard_event_module = {} # For bouncing events
	}
}

nep_dragon_country = {
	is_space_critter = yes
	blocks_piracy = yes
	destroys_starbases = yes
	ai = {
		enabled = no
	}
	faction = {
		hostile = yes
		needs_border_access = no
		generate_borders = no
		needs_colony = no
	}
	modules = {
		exclusive_diplomacy_module = {} # Nothing is allowed, but we need this for relationships.
		basic_technology_module = {}
		standard_event_module = {} # For bouncing events
	}
}

nep_Krahen_country = {
	attack_unarmed_orbital_stations = no
	#scaled_difficulty_bonuses = 0.5	# scales to setting
	#end_game_crisis = yes
	destroys_starbases = yes
	can_own_empty_planets = yes
	needs_survey = no
	has_complete_sensor = yes
	can_planets_be_attacked = yes
	has_capital = no
	home_system = nep_Central_system
	custom_starbase = nep_heavy_spacebase
	orbital_bombardment = yes
	#government = no
	enforces_borders = no
	ai = {
		enabled = no
	}
	faction = {
		needs_colony = no
		hostile = yes
		needs_border_access = no
	}
	
	custom_diplomacy = yes
	
	modules = {
		standard_event_module = {}
		standard_leader_module = {}
		all_technology_module = {}
		exclusive_diplomacy_module = {
			contact_rule = always
		}
	}
}

# nep_solarian = {
	# scaled_difficulty_bonuses = 3.0
	# can_own_empty_planets = yes
	# can_planets_be_attacked = yes
	# needs_survey = no
	# has_complete_sensor = yes
	# government = no
	# playable = no
	# enforces_borders = no
	# minimalist_contacts_list_profile = yes
	# custom_starbase = nep_starbase_Krahen
	# targets = { 
		# nep_Krahen_country
	# }
	# government = no
	# ai = {
		# enabled = yes
		# colonizer = yes
		# construction = yes
		# modules = {
			# anti_crisis_military_minister_module
		# }
	# }
	# faction = {
		# needs_colony = no
		# hostile = no
		# needs_border_access = no
		# generate_borders = yes
	# }
	
	# custom_diplomacy = yes
	
	# modules = {
		# standard_event_module = {}
		# standard_leader_module = {}
		# all_technology_module = {}
		# exclusive_diplomacy_module = {
			# contact_rule = always
		# }
	# }
# }

# nep_shinari = {
	# scaled_difficulty_bonuses = 3.0
	# can_own_empty_planets = yes
	# can_planets_be_attacked = yes
	# needs_survey = no
	# has_complete_sensor = yes
	# government = no
	# playable = no
	# enforces_borders = no
	# minimalist_contacts_list_profile = yes
	# custom_starbase = nep_starbase_Krahen
	# targets = { 
		# nep_Krahen_country
	# }
	# government = no
	# ai = {
		# enabled = yes
		# colonizer = yes
		# construction = yes
		# modules = {
			# anti_crisis_military_minister_module
		# }
	# }
	# faction = {
		# needs_colony = no
		# hostile = no
		# needs_border_access = no
		# generate_borders = yes
	# }
	
	# custom_diplomacy = yes
	
	# modules = {
		# standard_event_module = {}
		# standard_leader_module = {}
		# all_technology_module = {}
		# exclusive_diplomacy_module = {
			# contact_rule = always
		# }
	# }
# }

# nep_tolumn = {
	# scaled_difficulty_bonuses = 3.0
	# can_own_empty_planets = yes
	# can_planets_be_attacked = yes
	# needs_survey = no
	# has_complete_sensor = yes
	# government = no
	# playable = no
	# enforces_borders = no
	# minimalist_contacts_list_profile = yes
	# custom_starbase = nep_starbase_Krahen
	# targets = { 
		# nep_Krahen_country
	# }
	# government = no
	# ai = {
		# enabled = yes
		# colonizer = yes
		# construction = yes
		# modules = {
			# anti_crisis_military_minister_module
		# }
	# }
	# faction = {
		# needs_colony = no
		# hostile = no
		# needs_border_access = no
		# generate_borders = yes
	# }
	
	# custom_diplomacy = yes
	
	# modules = {
		# standard_event_module = {}
		# standard_leader_module = {}
		# all_technology_module = {}
		# exclusive_diplomacy_module = {
			# contact_rule = always
		# }
	# }
# }

# nep_mia_country = {
	# share_communications = no
	# default_ships = no
	# government = no
	# enforces_borders = yes
	# show_in_contacts_list = no
	# has_complete_sensor = yes
	# custom_starbase = nep_starbase_invinsible
	# ai = {
		# enabled = no
	# }
	# faction = {
		# hostile = no
		# needs_border_access = yes
		# generate_borders = yes
		# needs_colony = no
		# auto_delete = no
	# }
	# modules = {
		# standard_event_module = {} # Needed for events
		# exclusive_diplomacy_module = {
			# contact_rule = script_only
		# }
	# }
# }

nep_finalweapon_country = {
	is_space_critter = yes
	blocks_piracy = yes
	destroys_starbases = yes
	ai = {
		enabled = no
	}
	faction = {
		hostile = yes
		needs_border_access = no
		generate_borders = no
		needs_colony = no
	}
	modules = {
		exclusive_diplomacy_module = {} # Nothing is allowed, but we need this for relationships.
		basic_technology_module = {}
		standard_event_module = {} # For bouncing events
	}
}