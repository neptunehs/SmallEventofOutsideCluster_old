#######################################
#  highway
#######################################

create_malfunctioning_guards_country = {
	create_country = {
		name = "Malfunctioning Guards"
		type = nep_malfunctioning_guards
		auto_delete = no
		flag = {
			icon = {
				category = "zoological"
				file = "flag_zoological_1.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"red"
				"red"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		set_country_flag = malfunctioning_guards
		save_global_event_target_as = malfunctioning_guards_country
	}
	set_global_flag = malfunctioning_guards_created
}

malfunctioning_guards_spawn = {
	create_fleet = {
		name = "Malfunctioning Guards"
		settings = {
			spawn_debris = no 
		}
		effect = {		
			set_owner = event_target:malfunctioning_guards_country
			while = {
				count = 15
				create_ship = {
					name = "Malfunctioning Guard"
					design = "Xeeeeh"
				}
			}
			while = {
				count = 30
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Tes"
				}
			}
			while = {
				count = 60
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Sekae"
				}
			}
			while = {
				count = 140
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			add_modifier = {
				modifier = fleet_force_disparity_effect
				days = -1
			}
			
			queue_actions = {	
				repeat = {
					find_closest_planet = {
						trigger = {
							id = "nep_Malfunctioning_Guards_temppoi.1"
							is_star = no
						}
						found_planet = {
							orbit_planet = THIS
						}
					}
					find_closest_planet = {
						trigger = {
							id = "nep_Malfunctioning_Guards_temppoi.2"
							is_star = yes
						}
						found_planet = {
							orbit_planet = THIS
						}
					}
				}
			}						
		}
	}
}

#######################################
#  seal
#######################################
malfunctioning_guards_spawn_static = {
	create_fleet = {
		name = "Malfunctioning Guards"
		settings = {
			spawn_debris = no 
		}
		effect = {		
			set_owner = event_target:malfunctioning_guards_country
			while = {
				count = 9
				create_ship = {
					name = "Malfunctioning Guard"
					design = "Xeeeeh"
				}
			}
			while = {
				count = 18
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Tes"
				}
			}
			while = {
				count = 24
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Sekae"
				}
			}
			while = {
				count = 56
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			add_modifier = {
				modifier = nep_malfunctioning_guards_buff
				days = -1
			}
			
			queue_actions = {	
				find_closest_planet = {
					trigger = {
						id = "nep_Malfunctioning_Guards_temppoi.3"
						is_star = yes
					}
					found_planet = {
						orbit_planet = THIS
					}
				}
			}						
		}
	}
}

create_seal_evil_country = {
	create_country = {
		name = "Seal Evil"
		type = nep_seal_evil_country
		auto_delete = no
		flag = {
			icon = {
				category = "spherical"
				file = "flag_spherical_11.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"black"
				"black"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		set_country_flag = seal_evil_country
		save_global_event_target_as = seal_evil_country
	}
	set_global_flag = seal_evil_country_created
}

seal_boss_spawn = {
	create_fleet = {
		name = "Seal Evil"
		settings = {
			spawn_debris = no 
		}
		effect = {			
			set_owner = event_target:seal_evil_country
			create_ship = {
				name = "Seal Evil"
				design = "Seal evil"
			}	
			set_location = {
				target = event_target:nep_grand_seal_planet
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			add_modifier = {
				modifier = nep_seal_evil_buff
				days = -1
			}
		}
	}
}

#######################################
#  dragon
#######################################
create_dragon_babys = {
	create_fleet = {
		name = "Summoned Babys"
		settings = {
			spawn_debris = no 
		}
		effect = {			
			set_owner = prev.owner
			while = {
				count = 20
				create_ship = {
					name = "Summoned Babys"
					design = "Summoned Babys"
				}
			}
			set_location = {
				target = prev
				distance = 10
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self	
		}
	}
	last_created_fleet = {
		fleet_event = { id = nep_dragon.999 days = 45 }
	}
}

#######################################
#  invasion
#######################################
create_Krahen_defender = {
	event_target:nep_Krahen_country = {
		create_leader = {
			type = admiral
			species = event_target:nep_Krahen_country
			name = random
			skill = 10
			traits = {
				trait = leader_trait_Krahen_admiral
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "Krah'en Defender"
		effect = {		
			set_owner = event_target:nep_Krahen_country
			while = {
				count = 60
				create_ship = {
					name = "Krah'en Defender"
					design = "NAME_Krah'en_Battleship"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			set_fleet_flag = nep_Krahen_defender
			
			queue_actions = {
				repeat = {
					wait = {
						duration = 500
					}
				}
			}
		}
		settings = {
			garrison = yes
			can_change_leader = no
			uses_naval_capacity = no
		}
	}
}

create_Krahen_invader = {
	event_target:nep_Krahen_country = {
		create_leader = {
			type = admiral
			species = event_target:nep_Krahen_country
			name = random
			skill = 10
			traits = {
				trait = leader_trait_Krahen_admiral
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "Krah'en Invader"
		effect = {
			set_owner = event_target:nep_Krahen_country
			while = {
				count = 60
				create_ship = {
					name = "Krah'en Invader"
					design = "NAME_Krah'en_Battleship"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_bombardment_stance = armageddon
			set_fleet_flag = nep_inva_fleet
			
			# queue_actions = {
				# find_closest_planet = {
					# trigger = {
						# id = "nep_Krahen.trigger.1000"
						# is_star = yes
					# }
					# found_planet = {
						# move_to = this
						# orbit_planet = THIS
					# }
				# }
				# repeat = {
					# wait = {
						# duration = 5
						# random = 10
					# }
					# find_closest_planet = {
						# trigger = {
							# id = "nep_Krahen.trigger.0"
							# has_owner = yes
							# is_colony = yes
							# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
						# }
						# found_planet = {
							# orbit_planet = THIS
							# wait = {
								# duration = 30
								# random = 10
							# }
						# }
						# failed = {
							# find_random_system = {
								# trigger = {
									# id = "nep_Krahen.trigger.1"
									# #has_access_fleet = yes
									# distance = {
										# source = orbit.solar_system
										# use_bypasses = yes
										# min_jumps = 1
										# max_jumps = 2
									# }
									# OR = {
										# any_ship_in_system = {
											# is_ship_class = shipclass_starbase
											# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
										# }
										# any_planet = {
											# has_owner = yes
											# is_colony = yes
											# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
										# }
									# }
								# }
								# found_system = {
									# effect = {
										# log = "1:[This.GetName]"
									# }
									# find_closest_planet = {
										# trigger = {
											# id = "nep_Krahen.trigger.11"
											# has_owner = yes
											# is_colony = yes
											# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
										# }
										# found_planet = {
											# move_to = this
											# orbit_planet = THIS
										# }
										# failed = { 
											# move_to = prev
										# }
									# }
								# }
								# failed = {
									# find_random_system = {
										# trigger = {
											# id = "nep_Krahen.trigger.2"
											# #has_access_fleet = yes
											# distance = {
												# source = orbit.solar_system
												# use_bypasses = yes
												# min_jumps = 2
												# max_jumps = 3
											# }
											# OR = {
												# any_ship_in_system = {
													# is_ship_class = shipclass_starbase
													# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
												# }
												# any_planet = {
													# has_owner = yes
													# is_colony = yes
													# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
												# }
											# }
										# }
										# found_system = {
											# effect = {
												# log = "2:[This.GetName]"
											# }
											# find_closest_planet = {
												# trigger = {
													# id = "nep_Krahen.trigger.21"
													# has_owner = yes
													# is_colony = yes
													# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
												# }
												# found_planet = {
													# move_to = this
													# orbit_planet = THIS
												# }
												# failed = {
														# move_to = prev
												# }
											# }
										# }
										# failed = {
											# find_random_system = {
												# trigger = {
													# id = "nep_Krahen.trigger.3"
													# #has_access_fleet = yes
													# distance = {
														# source = orbit.solar_system
														# use_bypasses = yes
														# min_jumps = 3
														# max_jumps = 4
													# }
													# OR = {
														# any_ship_in_system = {
															# is_ship_class = shipclass_starbase
															# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
														# }
														# any_planet = {
															# has_owner = yes
															# is_colony = yes
															# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
														# }
													# }
												# }
												# found_system = {
													# effect = {
														# log = "3:[This.GetName]"
													# }
													# find_closest_planet = {
														# trigger = {
															# id = "nep_Krahen.trigger.31"
															# has_owner = yes
															# is_colony = yes
															# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
														# }
														# found_planet = {
															# move_to = this
															# orbit_planet = THIS
														# }
														# failed = {
															# move_to = prev
														# }
													# }

												# }
												# failed = {
													# find_random_system = {
														# trigger = {
															# id = "nep_Krahen.trigger.4"
															# #has_access_fleet = yes
															# distance = {
																# source = orbit.solar_system
																# use_bypasses = yes
																# min_jumps = 4
																# max_jumps = 5
															# }
															# OR = {
																# any_ship_in_system = {
																	# is_ship_class = shipclass_starbase
																	# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
																# }
																# any_planet = {
																	# has_owner = yes
																	# is_colony = yes
																	# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
																# }
															# }
														# }
														# found_system = {
															# effect = {
																# log = "4:[This.GetName]"
															# }									
															# find_closest_planet = {
																# trigger = {
																	# id = "nep_Krahen.trigger.41"
																	# has_owner = yes
																	# is_colony = yes
																	# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
																# }															
																# found_planet = {
																	# move_to = this
																	# orbit_planet = THIS
																# }
																# failed = {
																	# move_to = prev
																# }
															# }
														# }
														# failed = {
															# find_random_system = {
																# trigger = {
																	# id = "nep_Krahen.trigger.5"
																	# #has_access_fleet = yes
																	# distance = {
																		# source = orbit.solar_system
																		# use_bypasses = yes
																		# min_jumps = 5
																		# max_jumps = 6
																	# }
																	# OR = {
																		# any_ship_in_system = {
																			# is_ship_class = shipclass_starbase
																			# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
																		# }
																		# any_planet = {
																			# has_owner = yes
																			# is_colony = yes
																			# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
																		# }
																	# }
																# }
																# found_system = {
																	# effect = {
																		# log = "5:[This.GetName]"
																	# }								
																	# find_closest_planet = {
																		# trigger = {
																			# id = "nep_Krahen.trigger.51"
																			# has_owner = yes
																			# is_colony = yes
																			# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
																		# }																		
																		# found_planet = {
																			# move_to = this
																			# orbit_planet = THIS
																		# }
																		# failed = {
																			# move_to = prev
																		# }
																	# }
																# }
																# failed = {
																	# find_random_system = {
																		# trigger = {
																			# id = "nep_Krahen.trigger.6"
																			# #has_access_fleet = yes
																			# distance = {
																				# source = orbit.solar_system
																				# use_bypasses = yes
																				# min_jumps = 1
																				# max_jumps = 5
																			# }
																			# any_ship_in_system = {
																				# NOR = {
																					# is_ship_class = shipclass_starbase
																					# owner = { is_same_value = event_target:nep_Krahen_country } 
																				# }
																			# }
																		# }
																		# found_system = {
																			# effect = {
																				# log = "6:[This.GetName]"
																			# }
																			# find_closest_planet = {
																				# trigger = {
																					# id = "nep_Krahen.trigger.61"
																					# is_star = yes
																				# }
																				# found_planet = {
																					# move_to = this
																				# }
																			# }
																		# }
																		# failed = {
																			# find_closest_system = {
																				# trigger = {
																					# id = "nep_Krahen.trigger.7"
																					# has_access_fleet = yes
																					# any_ship_in_system = {
																						# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } } 
																					# }
																				# }
																				# found_system = {
																					# move_to = this
																				# }
																				# failed = {
																					# find_random_system = {
																						# trigger = {
																							# id = "nep_Krahen.trigger.8"
																							# has_access_fleet = yes
																							# distance = {
																								# source = orbit.solar_system
																								# use_bypasses = yes
																								# min_jumps = 1
																								# max_jumps = 5
																							# }
																						# }
																						# found_system = {
																							# effect = {
																								# log = this
																							# }
																							# move_to = this
																						# }
																					# }
																				# }
																			# }																			
																		# }
																	# }
																# }
															# }
														# }
													# }
												# }
											# }
										# }
									# }
								# }
							# }
						# }
					# }
				# }
			# }
			
			queue_actions = {
				find_random_system = {
					trigger = {
						id = "nep_Krahen.trigger.0.0"
						has_star_flag = nep_inva_system
					}
					found_system = {
						move_to = this
					}
				}
				# repeat = {
					# wait = {
						# duration = 5
						# random = 10
					# }
					# find_closest_planet = {
						# trigger = {
							# id = "nep_Krahen.trigger.0"
							# has_owner = yes
							# is_colony = yes
							# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
						# }
						# found_planet = {
							# effect = {
								# id = "nep_Krahen.trigger.0.1"
								# log = "P:[This.GetName]"
							# }
							# move_to = This
							# orbit_planet = THIS
							# wait = {
								# duration = 30
								# random = 10
							# }
						# }
						# failed = {
							# find_closest_system = {
								# trigger = {
									# id = "nep_Krahen.trigger.1"
									# has_access_fleet = yes
									# OR = {
										# any_ship_in_system = {
											# is_ship_class = shipclass_starbase
											# owner = { NOT = { has_country_flag = nep_Krahen_country } }
										# }
										# any_planet = {
											# has_owner = yes
											# is_colony = yes
											# owner = { NOT = { has_country_flag = nep_Krahen_country } }
										# }
									# }
									# count_system_ships = {
										# limit = { is_ship_size = nep_Krahen_battleship }
										# count < 60
									# }
								# }
								# found_system = {
									# effect = {
										# id = "nep_Krahen.trigger.1.1"
										# log = "1:[This.GetName]"
									# }
									# move_to = this
									# find_closest_planet = {
										# trigger = {
											# id = "nep_Krahen.trigger.1.2"
											# has_owner = yes
											# is_colony = yes
											# NOT = { owner = { is_same_value = event_target:nep_Krahen_country } }
										# }
										# found_planet = {
											# move_to = this
											# orbit_planet = THIS
										# }
										# failed = {
											# find_closest_planet = {
												# trigger = {
													# id = "nep_Krahen.trigger.1.3"
													# is_star = yes
												# }												
												# found_planet = {
													# move_to = this
													# orbit_planet = THIS
												# }
											# }
										# }
									# }
								# }
								# failed = {
									# find_closest_system = {
										# trigger = {
											# id = "nep_Krahen.trigger.2"
											# has_access_fleet = yes
											# any_ship_in_system = {
												# owner = { NOT = { has_country_flag = nep_Krahen_country } }
											# }
										# }
										# found_system = {
											# effect = {
												# id = "nep_Krahen.trigger.2.1"
												# log = "2:[This.GetName]"
											# }
											# move_to = this
											# find_closest_planet = {
												# trigger = {
													# id = "nep_Krahen.trigger.2.2"
													# is_star = yes
												# }
												# found_planet = {
													# move_to = this
													# orbit_planet = THIS
												# }
												# failed = {
												
												# }
											# }
										# }
										# failed = {
											# find_closest_system = {
												# trigger = {
													# id = "nep_Krahen.trigger.3"
													# has_access_fleet = yes
													# NOT = { is_inside_border = event_target:nep_Krahen_country }
												# }
												# found_system = {
													# effect = {
														# id = "nep_Krahen.trigger.3.1"
														# log = "3:[This.GetName]"
													# }
													# move_to = this
													# find_closest_planet = {
														# trigger = {
															# id = "nep_Krahen.trigger.3.2"
															# is_star = yes
														# }
														# found_planet = {
															# move_to = this
															# orbit_planet = THIS
														# }
														# failed = {
														
														# }
													# }

												# }
											# }
										# }
									# }
								# }
							# }
						# }
					# }
				# }
			}
		}
		settings = {
			can_change_leader = no
			uses_naval_capacity = no
		}
	}
}

create_Krahen_buildings = {
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_adv_tank_factory"
		create_pop = {
			species = owner
		}
	}
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_heavy_fortress"
		create_pop = {
			species = owner
		}
	}
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_heavy_fortress_2"
		create_pop = {
			species = owner
		}
	}
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_planetary_gun"
		create_pop = {
			species = owner
		}
	}
}

# create_Krahen_transport = {
	# event_target:nep_Krahen_country = {
		# create_leader = {
			# type = general
			# species = event_target:nep_Krahen_country
			# name = random
			# skill = 10
			# traits = {
				# trait = leader_trait_Krahen_general
			# }
		# }
	# }
	# create_fleet = {
		# name = "NAME_Krahen_Armies"
		# effect = {
			# set_owner = event_target:nep_Krahen_country
			# while = {
				# count = 20
				# create_army_transport = {
					# ship_name = "NAME_nep_Krahen_Transport"
					# army_name = "NAME_nep_Krahen_Invaders"
					# army_type = "nep_Krahen_anti_grav"
					# species = event_target:nep_Krahen_country
				# }
			# }
			# set_leader = last_created_leader
			# set_location = {
				# target = PREV
				# distance = 20
				# angle = random 
			# }
			# set_fleet_flag = nep_inva_armies
			# queue_actions = {
				# find_random_system = {
					# trigger = {
						# id = "nep_Krahen.trigger.0.0"
						# has_star_flag = nep_inva_system
					# }
					# found_system = {
						# move_to = this
					# }
				# }
			# }
		# }
		# settings = {
			# #can_change_leader = no
			# uses_naval_capacity = no
			# spawn_debris = no
		# }
	# }
# }

create_Krahen_constructor = {
	create_fleet = {
		effect = {
			create_ship = {
				name = random
				design = "NAME_nep_Krahen_Constructor"
			}
			set_owner = event_target:nep_Krahen_country
			set_fleet_stance = evasive
			set_location = {
				target = PREV
				distance = 20
				angle = random 
			}			
			
			queue_actions = {
				find_random_system = {
					trigger = {
						id = "nep_Krahen.trigger.0.0.0"
						has_star_flag = nep_inva_system
					}
					found_system = {
						move_to = this
					}
				}
			}
		}
	}
}

create_Krahen_colonizer = {
	create_fleet = {
		effect = {
			set_owner = event_target:nep_Krahen_country
			create_ship = {
				name = random
				design = "NAME_nep_Krahen_Colonizer"
				colonizer_species = owner_main_species
			}
			set_fleet_stance = evasive
			set_location = {
				target = PREV
				distance = 20
				angle = random 
			}
		}
	}
}

#######################################
#  finalweapon
#######################################

create_finalweapon_fleet = {
	event_target:nep_Krahen_country = {
		create_leader = {
			type = admiral
			species = prev.owner_species
			name = random
			skill = 10
			traits = {
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "NAME_nep_corrupted_finalweapons"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:nep_finalweapon_country
			while = {
				count = 3
				create_ship = {
					name = "NAME_nep_Corrupted_Finalweapon"
					design = "NAME_nep_finalweapon_design"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = event_target:nep_grand_seal_planet
				distance = 30
				angle = random
			}
			
			add_modifier = {
				modifier = fleet_force_disparity_effect
				days = -1
			}
			
			set_formation_scale = 1.6
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_bombardment_stance = armageddon
			
			set_fleet_flag = nep_corrupted_finalweapons
		}
	}
}

create_finalweapon_bomb_fleet = {
	create_fleet = {
		name = "NAME_nep_star_bomb"
		settings = {
			spawn_debris = no
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:nep_finalweapon_country
			while = {
				create_ship = {
					name = "NAME_nep_star_bomb"
					design = "NAME_nep_star_bomb_design"
				}
			}
			set_location = {
				target = prev
				distance = 1
				angle = random
			}

			set_event_locked = yes
		}
	}
}