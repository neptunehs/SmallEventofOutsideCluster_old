#######################################
#  highway
#######################################

create_malfunctioning_guards_country = {
	create_country = {
		name = "Malfunctioning Guards"
		type = nep_malfunctioning_guards
		auto_delete = no
		flag = {
			icon = {
				category = "zoological"
				file = "flag_zoological_1.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"red"
				"red"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		set_country_flag = malfunctioning_guards
		save_global_event_target_as = malfunctioning_guards_country
	}
	set_global_flag = malfunctioning_guards_created
}

malfunctioning_guards_spawn = {
	create_fleet = {
		name = "Malfunctioning Guards"
		settings = {
			spawn_debris = no 
		}
		effect = {		
			set_owner = event_target:malfunctioning_guards_country
			while = {
				count = 15
				create_ship = {
					name = "Malfunctioning Guard"
					design = "Xeeeeh"
				}
			}
			while = {
				count = 30
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Tes"
				}
			}
			while = {
				count = 60
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Sekae"
				}
			}
			while = {
				count = 140
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {	
				repeat = {
					find_closest_planet = {
						trigger = {
							id = "nep_Malfunctioning_Guards_temppoi.1"
							is_star = no
						}
						found_planet = {
							orbit_planet = THIS
						}
					}
					find_closest_planet = {
						trigger = {
							id = "nep_Malfunctioning_Guards_temppoi.2"
							is_star = yes
						}
						found_planet = {
							orbit_planet = THIS
						}
					}
				}
			}						
		}
	}
}

#######################################
#  seal
#######################################
malfunctioning_guards_spawn_static = {
	create_fleet = {
		name = "Malfunctioning Guards"
		settings = {
			spawn_debris = no 
		}
		effect = {		
			set_owner = event_target:malfunctioning_guards_country
			while = {
				count = 18
				create_ship = {
					name = "Malfunctioning Guard"
					design = "Xeeeeh"
				}
			}
			while = {
				count = 32
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Tes"
				}
			}
			while = {
				count = 60
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Sekae"
				}
			}
			while = {
				count = 108
				create_ship = {
					name = "Malfunctioning Guards"
					design = "Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {	
				find_closest_planet = {
					trigger = {
						id = "nep_Malfunctioning_Guards_temppoi.3"
						is_star = yes
					}
					found_planet = {
						orbit_planet = THIS
					}
				}
			}						
		}
	}
}

create_seal_evil_country = {
	create_country = {
		name = "Seal Evil"
		type = nep_seal_evil_country
		auto_delete = no
		flag = {
			icon = {
				category = "spherical"
				file = "flag_spherical_11.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"black"
				"black"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		set_country_flag = seal_evil_country
		save_global_event_target_as = seal_evil_country
	}
	set_global_flag = seal_evil_country_created
}

seal_boss_spawn = {
	create_fleet = {
		name = "Seal Evil"
		settings = {
			spawn_debris = no 
		}
		effect = {			
			set_owner = event_target:seal_evil_country
			create_ship = {
				name = "Seal Evil"
				design = "Seal evil"
			}	
			set_location = {
				target = event_target:nep_grand_seal_planet
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self	
			add_modifier = {
				modifier = nep_dragon_boss_buff
				days = -1
			}
		}
	}
}

#######################################
#  dragon
#######################################
create_dragon_babys = {
	create_fleet = {
		name = "Summoned Babys"
		settings = {
			spawn_debris = no 
		}
		effect = {			
			set_owner = prev.owner
			while = {
				count = 20
				create_ship = {
					name = "Summoned Babys"
					design = "Summoned Babys"
				}
			}
			set_location = {
				target = prev
				distance = 10
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self	
		}
	}
	last_created_fleet = {
		fleet_event = { id = nep_dragon.999 days = 45 }
	}
}

#######################################
#  invasion
#######################################
create_krahen_invader_defender = {
	create_fleet = {
		name = "Krah'en Invader"
		effect = {		
			set_owner = event_target:nep_krahen_country
			while = {
				count = 40
				create_ship = {
					name = "Krah'en Defender"
					design = "NAME_Krah'en_Battleship"
				}
			}
			while = {
				count = 80
				create_ship = {
					name = "Krah'en Defender"
					design = "NAME_Krah'en_Heavy_Destroyer"
				}
			}
			create_leader = {
				type = admiral
				species = root.owner_species
				name = random
				skill = 10
				traits = {
					trait = leader_trait_krahen_admiral
					trait = leader_trait_aggressive
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				repeat = {
					wait = {
						duration = 500
					}
				}
			}
		}
	}
}

create_krahen_invader = {
	create_fleet = {
		name = "Krah'en Invader"
		effect = {		
			set_owner = event_target:nep_krahen_country
			while = {
				count = 60
				create_ship = {
					name = "Krah'en Invader"
					design = "NAME_Krah'en_Battleship"
				}
			}
			create_leader = {
				type = admiral
				species = root.owner_species
				name = random
				skill = 10
				traits = {
					trait = leader_trait_krahen_admiral
					trait = leader_trait_aggressive
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_bombardment_stance = armageddon
			
			queue_actions = {
				repeat = {
					wait = {
						duration = 5
						random = 10
					}
					find_random_system = {
						trigger = {
							id = "nep_krahen.trigger.1"
							has_access_fleet = yes
							distance = {
								source = FROMFROM
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 2
							}
							OR = {
								any_ship_in_system = {
									is_ship_class = shipclass_starbase
									NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
								}
								any_planet = {
									has_owner = yes
									is_colony = yes
									NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
								}
							}
						}
						found_system = {
							random_system_planet = {
								limit = {
									has_owner = yes
									is_colony = yes
									NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
								}
								move_to = this
								orbit_planet = THIS
								while = {
									limit = {
										OR = {
											is_colony = yes
											NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
										}
									}
									wait = {
										duration = 30
									}
								}
							}
							move_to = this
						}
						failed = {
							find_random_system = {
								trigger = {
									id = "nep_krahen.trigger.2"
									has_access_fleet = yes
									distance = {
										source = FROMFROM
										use_bypasses = yes
										min_jumps = 2
										max_jumps = 3
									}
									OR = {
										any_ship_in_system = {
											is_ship_class = shipclass_starbase
											NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
										}
										any_planet = {
											has_owner = yes
											is_colony = yes
											NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
										}
									}
								}
								found_system = {
									random_system_planet = {
										limit = {
											has_owner = yes
											is_colony = yes
											NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
										}
										move_to = this
										orbit_planet = THIS
										while = {
											limit = {
												OR = {
													is_colony = yes
													NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
												}
											}
											wait = {
												duration = 30
											}
										}
									}
									move_to = this
								}
								failed = {
									find_random_system = {
										trigger = {
											id = "nep_krahen.trigger.3"
											has_access_fleet = yes
											distance = {
												source = FROMFROM
												use_bypasses = yes
												min_jumps = 3
												max_jumps = 4
											}
											OR = {
												any_ship_in_system = {
													is_ship_class = shipclass_starbase
													NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
												}
												any_planet = {
													has_owner = yes
													is_colony = yes
													NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
												}
											}
										}
										found_system = {
											random_system_planet = {
												limit = {
													has_owner = yes
													is_colony = yes
													NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
												}
												move_to = this
												orbit_planet = THIS
												while = {
													limit = {
														OR = {
															is_colony = yes
															NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
														}
													}
													wait = {
														duration = 30
													}
												}
											}
											move_to = this
										}
										failed = {
											find_random_system = {
												trigger = {
													id = "nep_krahen.trigger.4"
													has_access_fleet = yes
													distance = {
														source = FROMFROM
														use_bypasses = yes
														min_jumps = 4
														max_jumps = 5
													}
													OR = {
														any_ship_in_system = {
															is_ship_class = shipclass_starbase
															NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
														}
														any_planet = {
															has_owner = yes
															is_colony = yes
															NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
														}
													}
												}
												found_system = {
													random_system_planet = {
														limit = {
															has_owner = yes
															is_colony = yes
															NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
														}
														move_to = this
														orbit_planet = THIS
														while = {
															limit = {
																OR = {
																	is_colony = yes
																	NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
																}
															}
															wait = {
																duration = 30
															}
														}
													}
													move_to = this
												}
												failed = {
													find_random_system = {
														trigger = {
															id = "nep_krahen.trigger.5"
															has_access_fleet = yes
															distance = {
																source = FROMFROM
																use_bypasses = yes
																min_jumps = 5
																max_jumps = 6
															}
															OR = {
																any_ship_in_system = {
																	is_ship_class = shipclass_starbase
																	NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
																}
																any_planet = {
																	has_owner = yes
																	is_colony = yes
																	NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
																}
															}
														}
														found_system = {
															random_system_planet = {
																limit = {
																	has_owner = yes
																	is_colony = yes
																	NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
																}
																move_to = this
																orbit_planet = THIS
																while = {
																	limit = {
																		OR = {
																			is_colony = yes
																			NOT = { owner = { is_same_value = event_target:nep_krahen_country } }
																		}
																	}
																	wait = {
																		duration = 30
																	}
																}
															}
															move_to = this
														}
														failed = {
															find_random_system = {
																trigger = {
																	id = "nep_krahen.trigger.6"
																	has_access_fleet = yes
																	distance = {
																		source = FROMFROM
																		use_bypasses = yes
																		min_jumps = 1
																		max_jumps = 5
																	}
																	any_ship_in_system = {
																		NOR = {
																			is_ship_class = shipclass_starbase
																			owner = { is_same_value = event_target:nep_krahen_country } 
																		}
																	}
																}
																found_system = {
																	random_fleet_in_system = {
																		limit = {
																			any_ship = {
																				owner = { is_same_value = event_target:nep_krahen_country }
																			}
																		}
																		move_to = this
																	}
																}
																failed = {
																	find_random_system = {
																		trigger = {
																			id = "nep_krahen.trigger.7"
																			has_access_fleet = yes
																			distance = {
																				source = FROMFROM
																				use_bypasses = yes
																				min_jumps = 1
																				max_jumps = 5
																			}
																		}
																		found_system = {
																			move_to = this
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}								
							}
						}
					}
				}
			}
		}
	}
}

create_krahen_buildings = {
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_adv_tank_factory"
		create_pop = {
			species = owner
		}
	}
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_heavy_fortress"
		create_pop = {
			species = owner
		}
	}
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_heavy_fortress"
		create_pop = {
			species = owner
		}
	}
	random_tile = {
		limit = {
			has_blocker = no
			has_building = no
			has_grown_pop = no
		}
		set_building = "nep_planetary_gun"
		create_pop = {
			species = owner
		}
	}
}